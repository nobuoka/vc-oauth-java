buildscript {
    ext.kotlin_version = '1.2.10'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.15"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.junit.platform.gradle.plugin'

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group = 'info.vividcode'
version = '0.0.2-alpha-SNAPSHOT'

description = "Kotlin implementation of OAuth 1.0 Protocol."

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def javaApiUrl = 'http://docs.oracle.com/javase/8/docs/api/'
tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
    options.links(javaApiUrl)
}

repositories {
    jcenter()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

// setup dependencies
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile 'org.jetbrains.spek:spek-api:1.1.5'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from "$buildDir/javadoc"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

def pomConfig = {
    description 'Kotlin implementation of OAuth 1.0 Protocol.'
    url 'https://github.com/nobuoka/vc-oauth-java'
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "nobuoka"
            name "NOBUOKA Yu"
            email "nobuoka+dev@vividcode.info"
        }
    }
    scm {
        connection "scm:git:https://github.com/nobuoka/vc-oauth-java.git"
        developerConnection "scm:git:ssh://git@github.com/nobuoka/vc-oauth-java.git"
        url "https://github.com/nobuoka/vc-oauth-java"
    }
    issueManagement {
        url "https://github.com/nobuoka/vc-oauth-java/issues"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'oauth'

            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                def root = asNode()
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    if (project.hasProperty('bintrayUser')) {
        user = project.bintrayUser
    } else {
        logger.warn("Project property `bintrayUser` must be set if you upload archives to Bintray")
    }
    if (project.hasProperty('bintrayKey')) {
        key = project.bintrayKey
    } else {
        logger.warn("Project property `bintrayKey` must be set if you upload archives to Bintray")
    }

    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = 'vc-oauth-java'
    }
}
